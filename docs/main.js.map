{"version":3,"sources":["./src/app/components/crearusuario/crearusuario.component.ts","./src/app/components/crearusuario/crearusuario.component.html","./src/app/components/actualizarusuario/actualizarusuario.component.ts","./src/app/components/actualizarusuario/actualizarusuario.component.html","./src/environments/environment.ts","./src/app/components/formulario/formulario.component.ts","./src/app/components/formulario/formulario.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/tablausuarios/tablausuarios.component.html","./src/app/components/tablausuarios/tablausuarios.component.ts","./src/app/service/servicioform.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder , FormGroup} from '@angular/forms';\nimport { ServicioformService } from 'src/app/service/servicioform.service';\nimport { CrearUsuarioModel } from 'src/app/interfaces/crearUsuario.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-crearusuario',\n  templateUrl: './crearusuario.component.html',\n  styleUrls: ['./crearusuario.component.css']\n})\nexport class CrearusuarioComponent implements OnInit {\n\n  formulario:FormGroup;\n\n  constructor(private service:ServicioformService,\n    private fb:FormBuilder,private router:Router) {}\n\n  ngOnInit(): void {\n    this.formulario = this.fb.group({\n      nombre:[],\n      correo:[],\n      password:[],\n      rol: []\n    });\n  }\n  guardar(){\n    if(this.formulario.status == 'VALID'){\n      console.log(this.formulario.value);\n      const info  = this.formulario.value;\n      const  usuario: CrearUsuarioModel = {\n        nombre:info.nombre,\n        correo:info.correo,\n        password:info.password,\n        rol: info.rol,\n        no_control: '/17330438'\n      };\n      // console.log(usuario);\n      this.service.postUsuario( usuario ).subscribe(res =>{\n        console.log(res);\n        this.router.navigate(['tabla']);\n      });\n    }\n  }\n\n \n\n}\n","<form [formGroup]=\"formulario\">\n    <div class=\"mb-3\">\n       <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\n       <input formControlName =\"nombre\" type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" >\n   </div>\n   <div class=\"mb-3\">\n     <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n     <input formControlName =\"correo\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" >\n\n   </div>\n   <div class=\"mb-3\">\n    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n    <input formControlName =\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n  </div>\n  \n   <div class=\"mb-3\">\n       <label for=\"exampleInputPassword1\" class=\"form-label\">Rol</label>\n       <select formControlName =\"rol\" class=\"form-select\" aria-label=\"Default select example\">\n        \n           <!-- <option selected>Rol</option> -->\n           <option value=\"USER_ROLE\">USUARIO</option>\n           <option value=\"VENTAS_ROLE\">VENTAS</option>\n           <!-- <option value=\"2\">Rol 2</option>\n           <option value=\"3\">Rol 3</option> -->\n       </select>\n   </div>\n   \n   <div class=\"mb-3\">\n       <button (click) = \"guardar()\" type=\"submit\" class=\"btn btn-primary\">Guardar informacion</button>\n   </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder , FormGroup} from '@angular/forms';\nimport { ServicioformService } from 'src/app/service/servicioform.service';\nimport { CrearUsuarioModel } from 'src/app/interfaces/crearUsuario.model';\nimport{ Router,  ActivatedRoute }  from  '@angular/router';\n\n\n@Component({\n  selector: 'app-actualizarusuario',\n  templateUrl: './actualizarusuario.component.html',\n  styleUrls: ['./actualizarusuario.component.css']\n})\nexport class ActualizarusuarioComponent implements OnInit {\n\n  formulario:FormGroup;\n  id:any;\n  constructor(private service:ServicioformService,\n    private fb:FormBuilder, \n    private router: Router,\n    private rutaActiva:ActivatedRoute) {\n\n      const _id = this.rutaActiva.snapshot.paramMap.get('id');\n      this.id  =  _id;\n      if(_id !=null){\n        this.service.getUsuarioId(_id)\n      .subscribe(res =>{\n        const usuario =  res['usuarios'];\n        this.cargarInformacion(usuario);\n      });\n    }     \n  }\n\n  ngOnInit(): void {\n    this.formulario = this.fb.group({\n      nombre:[],\n      correo:[],\n      password:[],\n      rol: []\n    });\n  }\n  cargarInformacion(data:any){\n    \n    if( data.length>0 ){\n      console.log(data);\n      this.formulario.controls.nombre.setValue(data[0].nombre);\n      this.formulario.controls.correo.setValue(data[0].correo);\n      this.formulario.controls.password.setValue(data[0].password);\n      this.formulario.controls.rol.setValue(data[0].rol);\n    }\n  }\n  guardar(){\n    if(this.formulario.status == 'VALID'){\n      console.log(this.formulario.value);\n      const info  = this.formulario.value;\n      const  usuario: CrearUsuarioModel = {\n        nombre:info.nombre,\n        correo:info.correo,\n        password:info.password,\n        rol: info.rol,\n        no_control: '17330438'\n      };\n       this.service.putUsuario( this.id,usuario ).subscribe(res =>{\n         this.router.navigate(['tabla']);\n       });\n    }\n  }\n\n}\n","<h1>Actualizar usuario</h1>\n<form [formGroup]=\"formulario\">\n    <div class=\"mb-3\">\n       <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\n       <input formControlName =\"nombre\" type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" >\n   </div>\n   <div class=\"mb-3\">\n     <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n     <input formControlName =\"correo\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" >\n\n   </div>\n   <div class=\"mb-3\">\n    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n    <input formControlName =\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n  </div>\n  \n   <div class=\"mb-3\">\n       <label for=\"exampleInputPassword1\" class=\"form-label\">Rol</label>\n       <select formControlName =\"rol\" class=\"form-select\" aria-label=\"Default select example\">\n        \n           <!-- <option selected>Rol</option> -->\n           <option value=\"USER_ROLE\">USUARIO</option>\n           <option value=\"VENTAS_ROLE\">VENTAS</option>\n           <!-- <option value=\"2\">Rol 2</option>\n           <option value=\"3\">Rol 3</option> -->\n       </select>\n   </div>\n   \n   <div class=\"mb-3\">\n    <button (click) = \"guardar()\" type=\"submit\" class=\"btn btn-primary\">Actualizar informacion</button>\n</div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder , FormGroup} from '@angular/forms';\nimport { ServicioformService } from 'src/app/service/servicioform.service';\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.css']\n})\n\nexport class FormularioComponent implements OnInit {\n  formulario:FormGroup;\n\n  constructor(private service:ServicioformService,private fb:FormBuilder) {\n    // this.service.getUsuario().subscribe(res  => {\n    //   console.log(res);\n    // })\n   }\n\n  ngOnInit(): void {\n    this.formulario = this.fb.group({\n      nombre:[],\n      correo:[],\n      rol: []\n    });\n  }\n  guardar(){\n    if(this.formulario.status == 'VALID'){\n      console.log(this.formulario.value);\n    }\n  }\n\n}\n","<form [formGroup]=\"formulario\">\n     <div class=\"mb-3\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Nombre</label>\n        <input formControlName =\"nombre\" type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" >\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n      <input formControlName =\"correo\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" >\n\n    </div>\n\n   \n    <div class=\"mb-3\">\n        <select formControlName =\"rol\" class=\"form-select\" aria-label=\"Default select example\">\n            <option selected>Rol</option>\n            <option value=\"1\">USER_ROLE</option>\n            <option value=\"2\">Rol 2</option>\n            <option value=\"3\">Rol 3</option>\n        </select>\n    </div>\n    \n    <div class=\"mb-3\">\n        <button (click) = \"guardar()\" type=\"submit\" class=\"btn btn-primary\">Guardar informacion</button>\n    </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'fomulario2206';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormularioComponent } from './components/formulario/formulario.component';\nimport { TablausuariosComponent } from './components/tablausuarios/tablausuarios.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CrearusuarioComponent } from './components/crearusuario/crearusuario.component';\nimport { ActualizarusuarioComponent } from './components/actualizarusuario/actualizarusuario.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormularioComponent,\n    TablausuariosComponent,\n    NavbarComponent,\n    CrearusuarioComponent,\n    ActualizarusuarioComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"/tabla\">Formulario</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      \n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"/formulario\">Formulario</a>\n          </li> -->\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"/crearUsuario\">Crear Usuario</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/tabla\">Usuarios</a>\n          </li>\n        </ul>\n    </div>\n  </div>\n</nav>","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Nombre</th>\n        <th scope=\"col\">Correo</th>\n        <th scope=\"col\">Rol</th>\n        <th scope=\"col\">Acciones</th>\n      </tr>\n    </thead>\n    <tbody *ngFor=\"let usuario of usuarios; let i = index;\">\n      <tr>\n        <th scope=\"row\">{{i}}</th>\n        <td>{{usuario.nombre}}</td>\n        <td>{{usuario.correo}}</td>\n        <td>{{usuario.rol}}</td>\n        <td>\n          <button (click)=\"actualizar(i)\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"   class=\"btn btn-secondary\" [routerLink] =\"['/actualizar',usuario._id]\">Actualizar</button>\n          <button (click)=\"eliminar(i)\" class=\"btn btn-danger\">Eliminar</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        ...\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ServicioformService } from '../../service/servicioform.service';\n\n@Component({\n  selector: 'app-tablausuarios',\n  templateUrl: './tablausuarios.component.html',\n  styleUrls: ['./tablausuarios.component.css']\n})\nexport class TablausuariosComponent implements OnInit {\n\n  usuarios:any[] = [];\n  \n  constructor(private service:ServicioformService,private router:Router) {\n     this.service.getUsuario().subscribe(res  => {\n       this.usuarios = res['usuarios'];\n  \n     })\n   }\n  \n  ngOnInit(): void {\n    \n  }\n\n  actualizar( item:any ){\n    console.log('Actualizando');\n    console.log(this.usuarios[item]);\n    \n  }\n\n  eliminar(item:any){\n    console.log('Eliminado');\n\n    const _id = this.usuarios[item].id;\n\n    console.log(_id);\n    if(confirm('Estas seguro de eliminar este registro?')){\n      console.log('Acepto');\n        this.service.deleteUsuario(_id).subscribe(res=>{\n        console.log(res);\n        this.router.navigate(['tabla']);\n        });\n      }\n    }\n   \n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServicioformService {\n  private apiUrl = 'https://api-pw-ith.herokuapp.com/api/usuarios';\n\n  constructor(private http: HttpClient) { }\n  \n  public getUsuario(){\n    return this.http.get(this.apiUrl+ '/17330438') ;\n  }\n  public getUsuarioId(_id:any){\n    return this.http.get(this.apiUrl+ '/getId/'+_id) ;\n  }\n  public postUsuario( body:  any ){\n    return this.http.post(this.apiUrl, body);\n  }\n\n  public deleteUsuario( _id:  any ){\n    return this.http.delete(this.apiUrl + '/' + _id);\n  }\n  public putUsuario(body:any, _id:any){\n    return this.http.put(this.apiUrl+ '/'+_id, body);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TablausuariosComponent } from './components/tablausuarios/tablausuarios.component';\nimport { FormularioComponent } from './components/formulario/formulario.component';\nimport { CrearusuarioComponent } from './components/crearusuario/crearusuario.component';\nimport { ActualizarusuarioComponent } from './components/actualizarusuario/actualizarusuario.component';\n\nconst routes: Routes = [\n  {path:'tabla',component:TablausuariosComponent},\n  {path:'crearUsuario',component:CrearusuarioComponent},\n  {path:'informacion', component:FormularioComponent},\n  {path:'actualizar/:id',component:ActualizarusuarioComponent},\n  {path:'**', pathMatch:'full',redirectTo:'tabla'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}